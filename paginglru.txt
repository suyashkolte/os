#include <bits/stdc++.h>
using namespace std;
int main()
{
 int m, n, position, k, l;
 int a = 0, b = 0, page_fault = 0;
 // Ask for the number of frames
 int total_frames;
 cout << "Enter the number of frames: ";
 cin >> total_frames;
 int frames[total_frames];
 int temp[total_frames];
 // Ask for the number of pages
 int total_pages;
 cout << "Enter the number of pages: ";
 cin >> total_pages;
 int pages[total_pages];
 // Ask for the page values
 cout << "Enter the page values: ";
 for (n = 0; n < total_pages; n++) {
 cin >> pages[n];
 }
 // Print the header with appropriate spacing
 printf("Incoming \t");
 for (m = 0; m < total_frames; m++) {
 printf("Frame %d \t\t", m + 1);
 }
 printf("\n");
 for (m = 0; m < total_frames; m++) {
 frames[m] = -1;
 }
 for (n = 0; n < total_pages; n++) {
 printf("%d\t\t\t", pages[n]); // Print the incoming page
 a = 0, b = 0;
 for (m = 0; m < total_frames; m++) {
 if (frames[m] == pages[n]) {
 a = 1;
 b = 1;
 break;
 }
 }
 if (a == 0) {
 for (m = 0; m < total_frames; m++) {
 if (frames[m] == -1) {
 frames[m] = pages[n];
 b = 1;
 page_fault++;
 break;
 }
 }
 }
 if (b == 0) {
 for (m = 0; m < total_frames; m++) {
 temp[m] = 0;
 }
 for (k = n - 1, l = 1; l <= total_frames - 1; l++, k--) {
 for (m = 0; m < total_frames; m++) {
 if (frames[m] == pages[k]) {
 temp[m] = 1;
 }
 }
 }
 for (m = 0; m < total_frames; m++) {
 if (temp[m] == 0)
 position = m;
 }
 frames[position] = pages[n];
 page_fault++;
 }

 for (m = 0; m < total_frames; m++) {
 printf("%d\t\t\t\t", frames[m]);
 }
 printf("\n");
 }
 printf("\nTotal Number of Page Faults:\t%d\n", 
page_fault);
 return 0;
}#include <bits/stdc++.h>
using namespace std;
int main()
{
 int m, n, position, k, l;
 int a = 0, b = 0, page_fault = 0;
 // Ask for the number of frames
 int total_frames;
 cout << "Enter the number of frames: ";
 cin >> total_frames;
 int frames[total_frames];
 int temp[total_frames];
 // Ask for the number of pages
 int total_pages;
 cout << "Enter the number of pages: ";
 cin >> total_pages;
 int pages[total_pages];
 // Ask for the page values
 cout << "Enter the page values: ";
 for (n = 0; n < total_pages; n++) {
 cin >> pages[n];
 }
 // Print the header with appropriate spacing
 printf("Incoming \t");
 for (m = 0; m < total_frames; m++) {
 printf("Frame %d \t\t", m + 1);
 }
 printf("\n");
 for (m = 0; m < total_frames; m++) {
 frames[m] = -1;
 }
 for (n = 0; n < total_pages; n++) {
 printf("%d\t\t\t", pages[n]); // Print the incoming page
 a = 0, b = 0;
 for (m = 0; m < total_frames; m++) {
 if (frames[m] == pages[n]) {
 a = 1;
 b = 1;
 break;
 }
 }
 if (a == 0) {
 for (m = 0; m < total_frames; m++) {
 if (frames[m] == -1) {
 frames[m] = pages[n];
 b = 1;
 page_fault++;
 break;
 }
 }
 }
 if (b == 0) {
 for (m = 0; m < total_frames; m++) {
 temp[m] = 0;
 }
 for (k = n - 1, l = 1; l <= total_frames - 1; l++, k--) {
 for (m = 0; m < total_frames; m++) {
 if (frames[m] == pages[k]) {
 temp[m] = 1;
 }
 }
 }
 for (m = 0; m < total_frames; m++) {
 if (temp[m] == 0)
 position = m;
 }
 frames[position] = pages[n];
 page_fault++;
 }

 for (m = 0; m < total_frames; m++) {
 printf("%d\t\t\t\t", frames[m]);
 }
 printf("\n");
 }
 printf("\nTotal Number of Page Faults:\t%d\n", 
page_fault);
 return 0;
}
