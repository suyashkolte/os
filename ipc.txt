#include <stdio.h>
#include <stdlib.h>
#include <sys/wait.h>
#include <unistd.h>

int main() {
  int fd1[2], fd2[2];
  char buffer[100];
  pid_t p;

  if (pipe(fd1) == -1 || pipe(fd2) == -1) {
    perror("Pipe creation failed");
    exit(EXIT_FAILURE);
  }

  p = fork();
  if (p < 0) {
    perror("Fork failed");
    exit(EXIT_FAILURE);
  }

  if (p > 0) {
    close(fd1[0]);
    close(fd2[1]);

    printf("Parent: Sending message to child\n");
    write(fd1[1], "hello my child \n", 25);

    printf("Parent: Waiting for response from child\n");
    read(fd2[0], buffer, sizeof(buffer));
    printf("Parent received: %s\n", buffer);

    close(fd1[1]);
    close(fd2[0]);
  } else {
    close(fd1[1]);
    close(fd2[0]);

    printf("Child: Waiting for message from parent\n");
    read(fd1[0], buffer, sizeof(buffer));
    printf("Child received: %s\n", buffer);

    printf("Child: Sending response to parent\n");
    write(fd2[1], "hello my parent\n", 16);

    close(fd1[0]);
    close(fd2[1]);
  }

  return 0;
}
